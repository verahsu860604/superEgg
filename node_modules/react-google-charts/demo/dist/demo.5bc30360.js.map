{"version":3,"sources":["webpack:///demo.5bc30360.js","webpack:////Users/rn/.config/yarn/global/~/object-assign/index.js","webpack:////Users/rn/.config/yarn/global/~/asap/browser-raw.js","webpack:////Users/rn/.config/yarn/global/~/promise/lib/rejection-tracking.js","webpack:////Users/rn/.config/yarn/global/~/promise/lib/es6-extensions.js","webpack:///(webpack)/buildin/global.js","webpack:////Users/rn/.config/yarn/global/~/whatwg-fetch/fetch.js","webpack:////Users/rn/.config/yarn/global/~/promise/lib/core.js","webpack:////Users/rn/.config/yarn/global/~/nwb/polyfills.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","Error","3Kn3","toObject","val","undefined","TypeError","Object","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","arguments","length","key","call","5XKP","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","callback","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setTimeout","setInterval","scope","self","MutationObserver","WebKitMutationObserver","PNBU","disable","enabled","Promise","_10","_97","enable","options","onUnhandled","id","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","promise","_81","_72","timeout","_45","bind","errStr","stack","line","list","some","cls","ReferenceError","RangeError","U0G/","valuePromise","value","p","_61","_65","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","resolve","then","ex","reject","all","arr","args","Array","slice","res","remaining","race","values","onRejected","this","ewol","g","Function","eval","e","window","u8ry","normalizeName","name","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","support","iterable","Symbol","Headers","headers","append","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","get","type","rejected","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","obj","DataView","isView","oldValue","has","thisArg","push","entries","clone","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","xlY4","noop","getThen","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","_54","doResolve","safeThen","onFulfilled","constructor","handle","Handler","deferred","handleResolved","asap","cb","ret","newValue","finale","reason","xtTa"],"mappings":"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","file":"demo.5bc30360.js","sourcesContent":["webpackJsonp([0,1],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"xtTa\");\n(function webpackMissingModule() { throw new Error(\"Cannot find module \\\"/Users/rn/Code/github/active-repos/react-google-charts/demo/src/index.js\\\"\"); }());\n\n\n/***/ }),\n\n/***/ \"3Kn3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n\n/***/ \"5XKP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"ewol\")))\n\n/***/ }),\n\n/***/ \"PNBU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(\"xlY4\");\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n\n/***/ \"U0G/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(\"xlY4\");\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n\n/***/ \"ewol\":\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ \"u8ry\":\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n\n/***/ \"xlY4\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(\"5XKP\");\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n\n/***/ \"xtTa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Ensure polyfill compatibility between create-react-app and zero-config nwb apps.\n// This is from https://github.com/facebookincubator/create-react-app/blob/master/config/polyfills.js\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behaviour.\n  __webpack_require__(\"PNBU\").enable()\n  window.Promise = __webpack_require__(\"U0G/\")\n}\n\n// fetch() polyfill for making API calls\n__webpack_require__(\"u8ry\")\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(\"3Kn3\")\n\n\n/***/ })\n\n},[0]);\n\n\n// WEBPACK FOOTER //\n// demo.5bc30360.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/object-assign/index.js\n// module id = 3Kn3\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/asap/browser-raw.js\n// module id = 5XKP\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/promise/lib/rejection-tracking.js\n// module id = PNBU\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/promise/lib/es6-extensions.js\n// module id = U0G/\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ewol\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/whatwg-fetch/fetch.js\n// module id = u8ry\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/promise/lib/core.js\n// module id = xlY4\n// module chunks = 0","// Ensure polyfill compatibility between create-react-app and zero-config nwb apps.\n// This is from https://github.com/facebookincubator/create-react-app/blob/master/config/polyfills.js\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behaviour.\n  require('promise/lib/rejection-tracking').enable()\n  window.Promise = require('promise/lib/es6-extensions.js')\n}\n\n// fetch() polyfill for making API calls\nrequire('whatwg-fetch')\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/rn/.config/yarn/global/~/nwb/polyfills.js\n// module id = xtTa\n// module chunks = 0"],"sourceRoot":""}